$date
2024-09-28T16:00+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module execute $end
 $var wire 32 " io_imm_execute $end
 $var wire 7 % _T $end
 $var wire 33 & _io_pc_imm_added_T $end
 $var wire 32 ( io_pc_fetch $end
 $var wire 4 / io_op_alu_execute $end
 $var wire 1 6 clock $end
 $var wire 32 8 io_ins_execute $end
 $var wire 32 : io_pc_imm_added $end
 $var wire 32 > io_B_alu_execute $end
 $var wire 32 A io_A_alu_execute $end
 $var wire 1 C alumod $end
 $var wire 1 E reset $end
 $var wire 32 H io_out_alu_execute $end
  $scope module alumod $end
   $var wire 32 ! _io_out_T_10 $end
   $var wire 5 # shiftamount $end
   $var wire 63 $ _GEN_11 $end
   $var wire 63 ' _GEN_9 $end
   $var wire 32 ) _GEN_3 $end
   $var wire 32 * _io_out_T_6 $end
   $var wire 32 + io_B $end
   $var wire 63 , _GEN_6 $end
   $var wire 32 - _io_out_T_9 $end
   $var wire 32 . _io_out_T_3 $end
   $var wire 63 0 _GEN_10 $end
   $var wire 63 1 _GEN_5 $end
   $var wire 4 2 io_op $end
   $var wire 32 3 io_out $end
   $var wire 63 4 _GEN_8 $end
   $var wire 33 5 _io_out_T_2 $end
   $var wire 32 7 _GEN_2 $end
   $var wire 32 9 _io_out_T_5 $end
   $var wire 32 ; _io_out_T_11 $end
   $var wire 32 < _io_out_T_8 $end
   $var wire 32 = io_A $end
   $var wire 1 ? _T $end
   $var wire 33 @ _io_out_T $end
   $var wire 32 B _GEN_4 $end
   $var wire 63 D _io_out_T_7 $end
   $var wire 63 F _GEN_7 $end
   $var wire 32 G _io_out_T_1 $end
   $var wire 32 I _io_out_T_4 $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b000000000000000000000000000000000000000000000000000000000000000 4
0C
b000000000000000000000000000000000 @
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 (
b00000000000000000000000000000000 >
b00000000000000000000000000000000 !
06
b00000000000000000000000000000000 7
b00000000000000000000000000000000 "
b000000000000000000000000000000000000000000000000000000000000000 0
b00000000000000000000000000000000 8
b000000000000000000000000000000000000000000000000000000000000000 F
b000000000000000000000000000000000000000000000000000000000000000 1
b000000000000000000000000000000000 5
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 3
b000000000000000000000000000000000000000000000000000000000000000 ,
b0000000 %
b00000000000000000000000000000000 I
b000000000000000000000000000000000000000000000000000000000000000 $
b00000 #
b000000000000000000000000000000000000000000000000000000000000000 D
b00000000000000000000000000000000 .
b0000 /
b000000000000000000000000000000000000000000000000000000000000000 '
0E
b0000 2
b00000000000000000000000000000000 )
b00000000000000000000000000000000 G
b00000000000000000000000000000000 *
b000000000000000000000000000000000 &
b00000000000000000000000000000000 H
0?
b00000000000000000000000000000000 +
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 -
b00000000000000000000000000000000 ;
$end
#0
1?
1E
#1
16
#6
06
0E
#11
16
#16
06
#21
16
#26
06
#31
16
#36
06
#41
16
#46
06
#51
16
#56
06
#61
16
#66
06
#71
16
#76
06
#81
16
#86
06
#91
16
#96
06
#101
16
#106
06
#111
16
#116
06
#121
16
#126
06
#131
16
#136
06
#141
16
#146
06
#151
16
#156
06
#161
16
#166
06
#171
16
#176
06
#181
16
#186
06
#191
16
#196
06
#201
16
#206
06
#211
16
#216
06
