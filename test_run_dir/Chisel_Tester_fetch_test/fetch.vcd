$date
2024-09-10T07:25+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module fetch $end
 $var wire 32 " io_pc_fetch_imm $end
 $var wire 1 $ io_Imem_fetch_enable $end
 $var wire 1 * pcmod $end
 $var wire 32 + io_Imem_fetch_address $end
 $var wire 1 - io_pc_fetch_jump2 $end
 $var wire 1 3 clock $end
 $var wire 32 5 io_pc_fetch_out $end
 $var wire 32 7 io_Imem_fetch_out $end
 $var wire 1 8 io_pc_fetch_jump $end
 $var wire 1 ? reset $end
 $var wire 1 B io_pc_fetch_jump3 $end
 $var wire 1 D inmmod $end
  $scope module pcmod $end
   $var wire 1 ! _T $end
   $var wire 32 # _pc_T_1 $end
   $var wire 32 & io_imm $end
   $var wire 32 ' _GEN_1 $end
   $var wire 1 , io_jump2 $end
   $var wire 1 0 clock $end
   $var wire 32 2 _GEN_3 $end
   $var wire 32 4 _GEN_0 $end
   $var wire 33 6 _pc_T $end
   $var wire 32 : pc $end
   $var wire 32 ; io_out $end
   $var wire 32 < _GEN_2 $end
   $var wire 1 = io_jump $end
   $var wire 1 @ reset $end
   $var wire 1 A io_jump3 $end
  $upscope $end
  $scope module inmmod $end
   $var wire 32 ( io_out $end
   $var wire 30 . _io_out_T $end
   $var wire 1 / clock $end
   $var wire 32 1 memory $end
   $var wire 32 > io_address $end
    $scope module memory $end
      $scope module io_out_MPORT $end
       $var wire 1 % en $end
       $var wire 32 ) data $end
       $var wire 1 9 clk $end
       $var wire 8 C addr $end
      $upscope $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000000000000000000000000000 &
b00000000000000000000000000000000 <
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
0=
b00000000000000000000000000000000 >
b00000000000000000000000000000000 7
0!
b00000000000000000000000000000000 "
b00000000000000000000000010010011 1
b00000000000000000000000000000000 #
08
b000000000000000000000000000000000 6
09
b00000000000000000000000000000000 :
b00000000000000000000000000000000 2
b00000000 C
03
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b000000000000000000000000000000 .
0-
1%
0/
0D
00
b00000000000000000000000000000000 )
0?
0*
b00000000000000000000000000000000 +
0@
0A
0,
0$
0B
b00000000000000000000000000000000 ;
$end
#0
1?
b00000000000000000000000000000100 <
b00000000000000000000000000000100 4
1@
b00000000000000000000000000000100 #
b00000000000000000000000000000100 2
b00000000000000000000000000000100 '
b000000000000000000000000000000100 6
b00000000000000000000000010010011 (
b00000000000000000000000010010011 7
b00000000000000000000000010010011 )
#1
13
10
19
1/
#6
03
00
0?
b00000000000000000000000000000010 "
0@
b00000000000000000000000000000010 &
09
1$
b00000000000000000000000000000001 +
0/
